/*! rspls  
 * Copyright 2015-2015 sevdog
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 */
!function(a,b){b["rspls "]=a;var c={rock:"Rock",scissors:"Scissors",paper:"Paper",lizard:"Lizard",spock:"Spock","menu.settings":"Settings","menu.rules":"Description","menu.play":"Play","settings.description":"Customize game settings","settings.username":"Player name","settings.onlyClassic":"Only classic signs","settings.theme":"Theme","settings.algorithm":"CPU tactic","settings.save":"Save","settings.reset":"Reset","algorithm.random":"Random","algorithm.memory":"Move memory","algorithm.memoryAdvanced":"Move memory (advanced)","rule.desc":"Rock-paper-scissors-lizard-Spock) is a fancy variation of Rock-paper-scissors invented by two american students, Sam Kass and Karen Bryla, and later made popular being quoted in an episode of the sitcom The Big Bang Theory.","rule.vs.LS":"Lizard poisons Spock","rule.vs.LP":"Lizard eats Paper","rule.vs.PS":"Paper disproves Spock","rule.vs.PR":"Paper covers Rock","rule.vs.RS":"Rock crushes Scissors","rule.vs.RL":"Rock crushes Lizard","rule.vs.SP":"Scissors cuts Paper","rule.vs.SL":"Scissors decapitates Lizard","rule.vs.SS":"Spock smashes Scrissors","rule.vs.SR":"Spock vaporizes Rock",tie:"Tie using {{sign}}","game.player":"Player","game.pc":"CPU","game.win":"Wins","game.tie":"Tie","game.lost":"Lost","game.play":"Press to play",version:"version"},d={rock:"Sasso",scissors:"Forbici",paper:"Carta",lizard:"Lizard",spock:"Spock","menu.settings":"Impostazioni","menu.rules":"Descrizione","menu.play":"Gioca","settings.description":"Personalizza le impostazioni di gioco","settings.username":"Nome giocatore","settings.onlyClassic":"Solo segni classici","settings.theme":"Tema","settings.algorithm":"Strategia CPU","settings.save":"Salva","settings.reset":"Default","algorithm.random":"Casuale","algorithm.memory":"Memoria delle mosse","algorithm.memoryAdvanced":"Memoria delle mosse (avanzato)","rule.desc":'Sasso-carta-forbice-lucertola-Spock (Rock-paper-scissors-lizard-Spock) Ã¨ una variante fantasiosa della "Morra Cinese" inventata da due studenti americani, Sam Kass e Karen Bryla, e resa successivamente famosa da un episodio del telefilm The Big Bang Theory.',"rule.vs.LS":"Lizard avvelena Spock","rule.vs.LP":"Lizard mangia la Carta","rule.vs.PS":"La Carta smentisce Spock","rule.vs.PR":"La Carta avvolge il Sasso","rule.vs.RS":"Il Sasso rompe le Forbici","rule.vs.RL":"Il Sasso schiaccia Lizard","rule.vs.SP":"Le Forbici tagliano la Carta","rule.vs.SL":"Le Forbici decapitano Lizard","rule.vs.SS":"Spock rompe le Forbici","rule.vs.SR":"Spock vaporizza il Sasso",tie:"Pareggio con {{sign}}","game.player":"Giocatore","game.pc":"CPU","game.win":"Vittorie","game.tie":"Pareggi","game.lost":"Sconfitte","game.play":"Premi per giocare",version:"versione"},e=angular.module("rspls",["ngAnimate","ngTouch","ngRoute","ngAria","ngCookies","pascalprecht.translate"]);e.config(["$routeProvider","$translateProvider",function(a,b){a.when("/rules",{templateUrl:"templates/rules.html",controller:"RulesController"}).when("/game",{templateUrl:"templates/game.html",controller:"GameController"}).otherwise({redirectTo:"/game"}),b.translations("it",d).translations("en",c).determinePreferredLanguage().fallbackLanguage("en")}]),e.constant("version","1.0.1"),e.constant("crYearFrom","2015"),e.constant("crYearTo",""),e.constant("crOwner","sevdog"),e.constant("rules",{classics:["rock","scissors","paper"],signs:["rock","scissors","paper","lizard","spock"],wins:{rock:"01010".split(""),scissors:"00110".split(""),paper:"10001".split(""),lizard:"00101".split(""),spock:"11000".split("")}}),e.constant("phrases",{rock:{scissors:"rule.vs.RS",lizard:"rule.vs.RL"},scissors:{paper:"rule.vs.SP",lizard:"rule.vs.SL"},paper:{rock:"rule.vs.PR",spock:"rule.vs.PS"},lizard:{paper:"rule.vs.LP",spock:"rule.vs.LS"},spock:{rock:"rule.vs.SR",scissors:"rule.vs.SS"}}),e.constant("algorithms",[{key:"random",name:"algorithm.random"},{key:"memory",name:"algorithm.memory"},{key:"memoryAdvanced",name:"algorithm.memoryAdvanced"}]),e.run(["$rootScope","rules","phrases",function(a,b,c){a.rules=b,a.phrases=c}]),angular.module("rspls").controller("CopyRightController",["$scope","version","crYearTo","crYearFrom","crOwner",function(a,b,c,d,e){a.version=b,a.year=d+(c?"-"+c:""),a.owner=e}]),angular.module("rspls").controller("GameController",["$scope","$timeout","$interval","$translate","score","settings","cpu",function(a,b,c,d,e,f,g){var h,i=!0;a.viewCls="game",a.onlyClassic=f.values.onlyClassic,a.signs=a.onlyClassic?a.rules.classics:a.rules.signs,a.username=f.values.username,a.isPlaying=!1,a.timing=!1,a.choose=!1,a.score=e,a.play=function(){a.isPlaying=!0,a.timing=!0,a.choose=!1,h=c(function(){a.pcPos=i?"move-left":"move-right",i=!i},400),delete a.playerWin,delete a.tie,delete a.choosedSign},a.chooseSign=function(f){c.cancel(h),delete a.pcPos,a.timing=!1,a.isPlaying=!1,a.choose=!0;var i=a.rules;a.choosedSign=f,a.pcSign=g.choose(),a.pcSign.sign===f?(a.tie=!0,e.addGame(!1,!0),a.winningPhrase=d.instant("tie",{sign:d.instant(f)})):(a.playerWin=parseInt(i.wins[f][a.pcSign.idx]),a.playerWin?(e.addGame(!0),a.winningPhrase=a.phrases[f][a.pcSign.sign]):(e.addGame(),a.winningPhrase=a.phrases[a.pcSign.sign][f])),g.rememberMove(f),b(function(){a.showMsg=!0,b(function(){a.showMsg=!1},1e3)},100)},a.btnClass=function(b){return b!=a.choosedSign?"btn-primary":a.tie?"btn-warning":a.playerWin?"btn-success":"btn-danger"}}]),angular.module("rspls").controller("RulesController",["$scope",function(a){a.viewCls="rules",a.winMatch=function(b){var c=a.rules.wins[b];return function(a,b,d){return parseInt(c[b])}}}]),angular.module("rspls").controller("SettingsController",["$scope","$route","settings","algorithms",function(a,b,c,d){a.settings=angular.copy(c.values),a.algorithms=d,a.reset=function(){c.defaults(),a.settings=angular.copy(c.values),b.reload(),a.visible=!1},a.reload=function(){c.store(a.settings),b.reload(),a.visible=!1}}]),angular.module("rspls").factory("cpu",["settings","rules",function(a,b){function c(a,c){switch(a){case"memoryAdvanced":case"memory":var d=movesCache.mostUsed(c);if(d.count>0){var e=b.wins[d.sign].slice(0,c.length),f=c.indexOf(d.sign);return e[f]=1,e=e.reduce(function(a,b,d){return 0==b&&a.push(c[d]),a},[]),c.indexOf(e[parseInt(Math.random()*e.length)])}case"random":default:return parseInt(Math.random()*c.length)}}var d=100;return movesCache={moves:[],push:function(a){this.moves.push(a),this.moves.length>=d&&this.moves.shift()},mostUsed:function(a){var b=this.moves.reduce(function(b,c){return a.indexOf(c)>=0&&(b[c]=b[c]?b[c]+1:1),b},{}),c={sign:"",count:0};for(var d in b)b[d]>c.count&&(c.count=b[d],c.sign=d);return c}},{choose:function(){var d=a.values.onlyClassic?b.classics:b.signs,e=c(a.values.algorithm,d);return{idx:e,sign:d[e]}},rememberMove:function(a){movesCache.push(a)}}}]),angular.module("rspls").factory("score",[function(){var a={},b={play:0,tie:0,win:0};return Object.defineProperty(a,"game",{get:function(){return b.play}}),Object.defineProperty(a,"win",{get:function(){return b.win}}),Object.defineProperty(a,"tie",{get:function(){return b.tie}}),Object.defineProperty(a,"lost",{get:function(){return b.play-b.win-b.tie}}),a.addGame=function(a,c){b.play++,a?b.win++:c&&b.tie++},a}]),angular.module("rspls").factory("settings",[function(){var a={user:"",theme:"",algorithm:"random",onlyClassic:!1};return{values:angular.copy(a),store:function(a){this.values=angular.merge({},a)},defaults:function(){this.store(a)}}}]),angular.module("rspls").directive("nav",["$location",function(a){return{restrict:"A",link:function(b,c,d,e){b.$watch(function(){return a.path()},function(a,d){angular.forEach(c.find("a"),function(c,d){var e=angular.element(c),f=e.parent(),g=e.attr("href").replace("#",""),h=new RegExp("^"+g+"$",["i"]);b.navOpen&&(b.navOpen=!1),h.test(a)?f.addClass("active"):f.removeClass("active")})})}}}]),angular.module("rspls").directive("sideSettings",["$location",function(a){return{restrict:"E",scope:{visible:"="},templateUrl:"templates/settings.html",controller:"SettingsController"}}]),angular.module("rspls").directive("signRotator",["$interval","rules",function(a,b){return{restrict:"E",scope:{timeInterval:"=*interval",onlyClassic:"=*"},template:"<i class=\"fa fa-fw fa-2x\" ng-class=\"'fa-hand-' + sign + '-o'\"></i>",link:function(c,d,e,f){var g,h=0,i=c.onlyClassic?b.classics:b.signs,j=c.timeInterval||1e3;c.sign=i[h],g=a(function(){h=(h+1)%i.length,c.sign=i[h]},j),c.$on("$destroy",function(){a.cancel(g)})}}}]),angular.module("rspls").run(["$templateCache",function(a){"use strict";a.put("templates/game.html",'<div class="game-msg" ng-show="showMsg"><div class="alert text-center" ng-class="{\'alert-warning\': tie, \'alert-success\': playerWin, \'alert-danger\': !tie && !playerWin}"><i class="fa" ng-class="{\'fa-thumbs-up\': playerWin, \'fa-thumbs-down\': !tie && !playerWin}" ng-hide="tie"></i> {{ winningPhrase | translate }}</div></div><div class="row"><div class="col-xs-12 col-sm-offset-3 col-sm-6 text-center"><p class="h4"><label class="label label-primary">{{:: \'game.pc\' | translate }}</label></p><span class="btn btn-lg btn-warning pc-sign" ng-class="pcPos" tabindex="-1"><span class="h2"><sign-rotator interval="5000" ng-hide="timing || choose" only-classic="onlyClassic"></sign-rotator><sign-rotator interval="200" ng-if="timing && !choose" only-classic="onlyClassic"></sign-rotator><i class="fa fa-fw fa-2x" ng-show="choose" ng-class="\'fa-hand-\' + pcSign.sign + \'-o\'"></i></span></span></div></div><div class="row"><h3 class="col-xs-12 text-center"><i>vs</i></h3></div><div class="row"><div class="col-xs-12 col-sm-offset-3 col-sm-6"><p class="text-center h4"><label class="label label-primary">{{:: username ? username : (\'game.player\' | translate) }}</label></p><div class="btn-toolbar btn-toolbar-centered" role="toolbar"><button type="button" class="btn btn-lg" ng-disabled="!isPlaying" ng-repeat="sign in signs" ng-click="chooseSign(sign)" ng-class="btnClass(sign)"><h2><i class="fa fa-fw fa-2x" ng-class="\'fa-hand-\' + sign + \'-o\'"></i></h2></button></div><div class="center-block text-center"><p><i>{{:: \'game.play\' | translate }}</i></p><button class="btn btn-default btn-lg" ng-click="play()" ng-disabled="isPlaying"><i class="fa fa-play"></i></button></div></div></div><div class="row" style="margin-top:30px"><div class="col-xs-12 col-sm-offset-4 col-sm-4"><table class="table"><thead><tr><th>{{:: \'game.win\' | translate }}</th><th>{{:: \'game.tie\' | translate }}</th><th>{{:: \'game.lost\' | translate }}</th></tr></thead><tbody><tr><td class="text-center">{{ score.win }}</td><td class="text-center">{{ score.tie }}</td><td class="text-center">{{ score.lost }}</td></tr></tbody></table></div></div>'),a.put("templates/rules.html",'<h1 class="page-header">Rock-Scissor-Paper-Lizard-Spock</h1><p>{{:: \'rule.desc\' | translate }}</p><div class="row"><ul class="list-unstyled col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2"><li ng-repeat="sign in rules.signs"><h2><i class="fa fa-fw" ng-class="\'fa-hand-\' + sign + \'-o\'"></i> {{:: sign | translate }}</h2><div class="row"><div class="col-xs-6" ng-repeat="other in rules.signs | filter : winMatch(sign)"><blockquote><b class="fa fa-fw text-success" ng-class="\'fa-hand-\'+ sign + \'-o\'"></b> vs <i class="fa fa-fw text-danger" ng-class="\'fa-hand-\'+ other + \'-o\'"></i><p class="small">{{ :: phrases[sign][other] | translate }}</p></blockquote></div></div></li></ul></div>'),a.put("templates/settings.html",'<aside class="menu-left" ng-show="visible"><button type="button" class="close" ng-click="visible = false">&times;</button><p class="text-info">{{:: \'settings.description\' | translate }}</p><form ng-submit="reload()"><div class="form-group"><label for="settings-username">{{:: \'settings.username\' | translate }}</label><input id="setting-username" class="form-control" type="text" ng-model="settings.username"></div><div class="form-group"><label for="settings-theme">{{:: \'settings.theme\' | translate }}</label><input id="settings-theme" class="form-control" type="text" ng-model="settings.theme"></div><div class="form-group"><label for="settings-algorithm">{{:: \'settings.algorithm\' | translate }}</label><select id="settings-algorithm" class="form-control" ng-model="settings.algorithm"><option ng-repeat="algorithm in ::algorithms" value="{{:: algorithm.key }}">{{:: algorithm.name | translate }}</option></select></div><div class="form-group checkbox-inline"><label class="checkbox"><input type="checkbox" ng-model="settings.onlyClassic">{{:: \'settings.onlyClassic\' | translate }}</label></div><div class="btn-toolbar btn-toolbar-centered"><button type="submit" class="btn btn-primary">{{:: \'settings.save\' | translate }}</button> <button type="reset" class="btn btn-default" ng-click="reset()">{{:: \'settings.reset\' | translate }}</button></div></form></aside><div class="menu-left-backdrop" ng-show="visible" ng-click="visible = false" ng-cloak tabindex="-1" role="backdrop"></div>')}])}({},function(){return this}());